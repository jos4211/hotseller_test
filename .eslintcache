[{"C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\reportWebVitals.js":"1","C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\index.js":"2","C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\App.js":"3","C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\component\\categoryItem.js":"4","C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\pages\\hashtagInfo.js":"5","C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\pages\\main.js":"6"},{"size":362,"mtime":1609531162789,"results":"7","hashOfConfig":"8"},{"size":288,"mtime":1611599086329,"results":"9","hashOfConfig":"8"},{"size":316,"mtime":1611599240079,"results":"10","hashOfConfig":"8"},{"size":5051,"mtime":1611599123495,"results":"11","hashOfConfig":"8"},{"size":5495,"mtime":1611600331674,"results":"12","hashOfConfig":"8"},{"size":3079,"mtime":1611600330685,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5dghpq",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\reportWebVitals.js",[],"C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\index.js",[],"C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\App.js",[],"C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\component\\categoryItem.js",["27"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport addComma from \"../utility/addComma\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n// 뽑아놓은 카테고리 데이터로 정리해서 보여주는 곳\r\n\r\nconst ItemBox = styled(Button)`\r\n  color: black !important;\r\n  box-shadow: 2px 2px 5px 1px rgb(190, 190, 190) !important;\r\n  border: none;\r\n  width: 200px;\r\n  height: 60px;\r\n  background-color: rgb(242, 242, 251);\r\n  border-radius: 10px 10px;\r\n\r\n  & + & {\r\n    margin: 10px;\r\n  }\r\n\r\n  &:first-child {\r\n    margin: 10px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgb(222, 222, 231);\r\n\r\n    .tagContent {\r\n      display: inline-block;\r\n      width: 200px;\r\n      height: auto;\r\n    }\r\n  }\r\n  &:focus {\r\n    border: none;\r\n    background-color: rgb(222, 222, 231) !important;\r\n  }\r\n\r\n  .tagContent {\r\n    padding-top: 10px;\r\n    display: none;\r\n    position: relative;\r\n    background-color: rgba(0, 0, 0, 0.9);\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst TagName = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\n// value : json에서 뽑아 map을 돌린 데이터\r\n// number : json에서 뽑아 map을 돌릴때 나온 값 (순위)\r\n// category : 데이터의 구조가 많이 다른 카테고리를 구분 해주는 값 ( 데이터를 좀 더 효율적으로 뿌리기 위해 사용)\r\n\r\nfunction MainTrendItem({ value, number, category }) {\r\n  const [state, setState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setState(() => {\r\n      // 포스팅 증가량,증가율 순위\r\n      if (category === \"posting\") {\r\n        return (\r\n          <Link to={\"/\" + value.hashtag}>\r\n            <ItemBox>\r\n              <TagName>\r\n                #{number}. {value.hashtag}\r\n              </TagName>\r\n              <div className=\"tagContent\">\r\n                <p>포스팅 수 : {addComma(value.post_cnt)}개</p>\r\n                <p>최근 증가량 : {value.post_gap}개</p>\r\n                <p>최근 증가율 : {value.post_rate}%</p>\r\n                <p>게시물 수 : {addComma(value.post_cnt)}개</p>\r\n              </div>\r\n            </ItemBox>\r\n          </Link>\r\n        );\r\n\r\n        // 새롭게 분석대상이 된 해시태그\r\n      } else if (category === \"recent\") {\r\n        return (\r\n          <Link to={\"/\" + value.hashtag}>\r\n            <ItemBox>\r\n              <TagName>{value.hashtag}</TagName>\r\n              <div className=\"tagContent\">\r\n                <p>포스팅 수 : {addComma(value.post_cnt)}개</p>\r\n                <p>발견 날짜 : {value.add_date}</p>\r\n                <p>분석 시작 시간 : {value.check_start_time}</p>\r\n                <p>게시물 수 : {addComma(value.post_cnt)}개</p>\r\n              </div>\r\n            </ItemBox>\r\n          </Link>\r\n        );\r\n\r\n        // 관련 태그 , 관련도 순위\r\n      } else if (category === \"relevance\") {\r\n        return (\r\n          <Link to={\"/\" + value.hashtag}>\r\n            <ItemBox>\r\n              <TagName>\r\n                #{number}. {value.hashtag}\r\n              </TagName>\r\n              <div className=\"tagContent\">\r\n                <p>포스팅 수 : {addComma(value.post_cnt)}개</p>\r\n              </div>\r\n            </ItemBox>\r\n          </Link>\r\n        );\r\n\r\n        // 활동 많이 한 아이디 순위\r\n      } else if (category === \"topId\") {\r\n        return (\r\n          <ItemBox>\r\n            <TagName>\r\n              #{number}. {value.username}\r\n            </TagName>\r\n            <div className=\"tagContent\">\r\n              <p>점수 : {addComma(value.score)}점</p>\r\n              <p>팔로워 수 : {addComma(value.follower_cnt)}명</p>\r\n              <p>팔로우 수 : {addComma(value.follow_cnt)}명</p>\r\n              <p>포스팅 수 : {addComma(value.post_cnt)}개</p>\r\n              <p>평균 좋아요 : {addComma(value.average_like_cnt)}개</p>\r\n            </div>\r\n          </ItemBox>\r\n        );\r\n\r\n        // 최근 1년간 포스팅 수 추이\r\n      } else if (category === \"postLog\") {\r\n        return (\r\n          <ItemBox>\r\n            <TagName>{value.check_date}</TagName>\r\n            <div className=\"tagContent\">\r\n              <p>포스팅 수 : {addComma(value.post_cnt)}개</p>\r\n            </div>\r\n          </ItemBox>\r\n        );\r\n\r\n        // 최근 인기, 오래 유지, 좋아요, 댓글 게시물 순위\r\n      } else if (category === \"post\") {\r\n        return (\r\n          <ItemBox>\r\n            <TagName>{value.url}</TagName>\r\n            <div className=\"tagContent\">\r\n              <p>좋아요 수 : {addComma(value.like_cnt)}개</p>\r\n              <p>댓글 수 : {addComma(value.comment_cnt)}개</p>\r\n              <p>영상 수 : {addComma(value.mov_cnt)}개</p>\r\n              <p>사진 수 : {addComma(value.pic_cnt)}개</p>\r\n              <p>포스팅 시간 : {value.post_time}</p>\r\n              <p>사진 수 : {addComma(value.pic_cnt)}개</p>\r\n            </div>\r\n          </ItemBox>\r\n        );\r\n      }\r\n    });\r\n  }, [value]);\r\n\r\n  return <>{state}</>;\r\n}\r\n\r\nexport default MainTrendItem;\r\n","C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\pages\\hashtagInfo.js",["28"],"C:\\Users\\q1w2e\\Desktop\\직박구리\\hotseller\\src\\pages\\main.js",["29"],{"ruleId":"30","severity":1,"message":"31","line":156,"column":6,"nodeType":"32","endLine":156,"endColumn":13,"suggestions":"33"},{"ruleId":"30","severity":1,"message":"34","line":73,"column":13,"nodeType":"35","endLine":86,"endColumn":4},{"ruleId":"30","severity":1,"message":"34","line":47,"column":13,"nodeType":"35","endLine":53,"endColumn":4},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category' and 'number'. Either include them or remove the dependency array. If 'setState' needs the current value of 'category', you can also switch to useReducer instead of useState and read 'category' in the reducer.","ArrayExpression",["36"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",{"desc":"37","fix":"38"},"Update the dependencies array to be: [category, number, value]",{"range":"39","text":"40"},[4466,4473],"[category, number, value]"]