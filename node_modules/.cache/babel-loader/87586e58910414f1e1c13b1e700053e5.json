{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\q1w2e\\\\Desktop\\\\hotseller-test\\\\hotseller\\\\src\\\\pages\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as tagData from \"../lib/api/getData\";\nimport TrendContainer from \"../component/mainTrendContainer\";\nimport MainDayBtn from \"../component/mainDayBtn\";\nimport styled from \"styled-components\";\nimport { Button } from \"react-bootstrap\";\nconst CategoryBox = styled.div`\n  text-align: center;\n`;\n_c = CategoryBox;\n\nfunction Main() {\n  _s();\n\n  const [trendData, setTrendData] = useState(tagData.mainData);\n  const [day, setDay] = useState({\n    gap: \"day1_gap\",\n    rate: \"day1_rate\"\n  });\n  useEffect(async () => {\n    //day1_gap\n    const getTrendData = await tagData.mainData;\n    setTrendData(getTrendData);\n    console.log(\"trendData\", trendData);\n  }, []); // day버튼 클릭시\n\n  const onDayBtn = e => {\n    console.log(\"e\", e.target.day);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CategoryBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD3EC\\uC2A4\\uD305 \\uC99D\\uAC00\\uB7C9 \\uC21C\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainDayBtn, {\n        day1: \"day1_gap\",\n        day7: \"day7_gap\",\n        day30: \"day30_gap\",\n        onDayBtn: onDayBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TrendContainer, {\n        type: \"gap\",\n        data: trendData,\n        day: day.gap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD3EC\\uC2A4\\uD305 \\uC99D\\uAC00\\uC728 \\uC21C\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainDayBtn, {\n        day1: \"day1_gap\",\n        day7: \"day7_gap\",\n        day30: \"day30_gap\",\n        onDayBtn: onDayBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TrendContainer, {\n        type: \"rate\",\n        data: trendData,\n        day: day.gap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC0C8\\uB86D\\uAC8C \\uBD84\\uC11D \\uB300\\uC0C1\\uC774 \\uB41C \\uD574\\uC2DC\\uD0DC\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TrendContainer, {\n        type: \"recent\",\n        data: trendData,\n        day: \"recent_list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Main, \"wuRc1bvMiYB78DXnnkxTX9Knh5Y=\");\n\n_c2 = Main;\nexport default Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategoryBox\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"sources":["C:/Users/q1w2e/Desktop/hotseller-test/hotseller/src/pages/main.js"],"names":["React","useState","useEffect","tagData","TrendContainer","MainDayBtn","styled","Button","CategoryBox","div","Main","trendData","setTrendData","mainData","day","setDay","gap","rate","getTrendData","console","log","onDayBtn","e","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;AAC/B;AACA,CAFA;KAAMD,W;;AAIN,SAASE,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACE,OAAO,CAACU,QAAT,CAA1C;AAEA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC;AAC7Be,IAAAA,GAAG,EAAE,UADwB;AAE7BC,IAAAA,IAAI,EAAE;AAFuB,GAAD,CAA9B;AAKAf,EAAAA,SAAS,CAAC,YAAY;AACpB;AACA,UAAMgB,YAAY,GAAG,MAAMf,OAAO,CAACU,QAAnC;AAEAD,IAAAA,YAAY,CAACM,YAAD,CAAZ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,SAAzB;AACD,GAPQ,EAON,EAPM,CAAT,CARc,CAiBd;;AACA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBE,CAAC,CAACC,MAAF,CAAST,GAA1B;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,QAAQ,EAAEO;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,KAArB;AAA2B,QAAA,IAAI,EAAEV,SAAjC;AAA4C,QAAA,GAAG,EAAEG,GAAG,CAACE;AAArD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,WAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,QAAQ,EAAEK;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,IAAI,EAAEV,SAAlC;AAA6C,QAAA,GAAG,EAAEG,GAAG,CAACE;AAAtD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAuBE,QAAC,WAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,IAAI,EAAEL,SAApC;AAA+C,QAAA,GAAG,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA8BD;;GApDQD,I;;MAAAA,I;AAsDT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport * as tagData from \"../lib/api/getData\";\r\nimport TrendContainer from \"../component/mainTrendContainer\";\r\nimport MainDayBtn from \"../component/mainDayBtn\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst CategoryBox = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nfunction Main() {\r\n  const [trendData, setTrendData] = useState(tagData.mainData);\r\n\r\n  const [day, setDay] = useState({\r\n    gap: \"day1_gap\",\r\n    rate: \"day1_rate\",\r\n  });\r\n\r\n  useEffect(async () => {\r\n    //day1_gap\r\n    const getTrendData = await tagData.mainData;\r\n\r\n    setTrendData(getTrendData);\r\n\r\n    console.log(\"trendData\", trendData);\r\n  }, []);\r\n\r\n  // day버튼 클릭시\r\n  const onDayBtn = (e) => {\r\n    console.log(\"e\", e.target.day);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CategoryBox>\r\n        <h2>포스팅 증가량 순위</h2>\r\n        <MainDayBtn\r\n          day1=\"day1_gap\"\r\n          day7=\"day7_gap\"\r\n          day30=\"day30_gap\"\r\n          onDayBtn={onDayBtn}\r\n        />\r\n        <TrendContainer type=\"gap\" data={trendData} day={day.gap} />\r\n      </CategoryBox>\r\n\r\n      <CategoryBox>\r\n        <h2>포스팅 증가율 순위</h2>\r\n        <MainDayBtn\r\n          day1=\"day1_gap\"\r\n          day7=\"day7_gap\"\r\n          day30=\"day30_gap\"\r\n          onDayBtn={onDayBtn}\r\n        />\r\n        <TrendContainer type=\"rate\" data={trendData} day={day.gap} />\r\n      </CategoryBox>\r\n\r\n      <CategoryBox>\r\n        <h2>새롭게 분석 대상이 된 해시태그</h2>\r\n        <TrendContainer type=\"recent\" data={trendData} day=\"recent_list\" />\r\n      </CategoryBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}