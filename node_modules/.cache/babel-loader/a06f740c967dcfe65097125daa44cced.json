{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\q1w2e\\\\Desktop\\\\hotseller-test\\\\hotseller\\\\src\\\\pages\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as tagData from \"../lib/api/getData\";\nimport TrendContainer from \"../component/mainTrendContainer\";\nimport MainDayBtn from \"../component/mainDayBtn\";\nimport styled from \"styled-components\";\nimport { Button } from \"react-bootstrap\";\nconst CategoryBox = styled.div`\n  text-align: center;\n`;\n_c = CategoryBox;\n\nfunction Main() {\n  _s();\n\n  const [trendData, setTrendData] = useState(tagData.trendData);\n  const [day, setDay] = useState({\n    gap: \"day1_gap\",\n    rate: \"day1_rate\"\n  });\n  useEffect(async () => {\n    const getTrendData = await tagData.trendData;\n    setTrendData(getTrendData);\n  }, []); // gap day버튼 클릭시\n\n  const onGapDayBtn = e => {\n    console.log(\"gap\", e.target.name);\n    setDay(state => {\n      return { ...state,\n        gap: e.target.name\n      };\n    });\n  }; // rate day버튼 클릭시\n\n\n  const onRateDayBtn = e => {\n    console.log(\"rate\", e.target.name);\n    setDay(state => {\n      return { ...state,\n        rate: e.target.name\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CategoryBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD3EC\\uC2A4\\uD305 \\uC99D\\uAC00\\uB7C9 \\uC21C\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainDayBtn, {\n        isDay: day.gap,\n        day1: \"day1_gap\",\n        day7: \"day7_gap\",\n        day30: \"day30_gap\",\n        onDayBtn: onGapDayBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TrendContainer, {\n        data: trendData,\n        day: day.gap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD3EC\\uC2A4\\uD305 \\uC99D\\uAC00\\uC728 \\uC21C\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainDayBtn, {\n        isDay: day.rate,\n        day1: \"day1_rate\",\n        day7: \"day7_rate\",\n        day30: \"day30_rate\",\n        onDayBtn: onRateDayBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TrendContainer, {\n        data: trendData,\n        day: day.rate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC0C8\\uB86D\\uAC8C \\uBD84\\uC11D \\uB300\\uC0C1\\uC774 \\uB41C \\uD574\\uC2DC\\uD0DC\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TrendContainer, {\n        type: \"recent\",\n        data: trendData,\n        day: \"recent_list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Main, \"ReAc3llOiT02lCEqFLfjkr8fShk=\");\n\n_c2 = Main;\nexport default Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategoryBox\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"sources":["C:/Users/q1w2e/Desktop/hotseller-test/hotseller/src/pages/main.js"],"names":["React","useState","useEffect","tagData","TrendContainer","MainDayBtn","styled","Button","CategoryBox","div","Main","trendData","setTrendData","day","setDay","gap","rate","getTrendData","onGapDayBtn","e","console","log","target","name","state","onRateDayBtn"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;AAC/B;AACA,CAFA;KAAMD,W;;AAIN,SAASE,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACE,OAAO,CAACQ,SAAT,CAA1C;AAEA,QAAM,CAACE,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC;AAC7Bc,IAAAA,GAAG,EAAE,UADwB;AAE7BC,IAAAA,IAAI,EAAE;AAFuB,GAAD,CAA9B;AAKAd,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMe,YAAY,GAAG,MAAMd,OAAO,CAACQ,SAAnC;AAEAC,IAAAA,YAAY,CAACK,YAAD,CAAZ;AACD,GAJQ,EAIN,EAJM,CAAT,CARc,CAcd;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,CAAC,CAACG,MAAF,CAASC,IAA5B;AACAT,IAAAA,MAAM,CAAEU,KAAD,IAAW;AAChB,aAAO,EAAE,GAAGA,KAAL;AAAYT,QAAAA,GAAG,EAAEI,CAAC,CAACG,MAAF,CAASC;AAA1B,OAAP;AACD,KAFK,CAAN;AAGD,GALD,CAfc,CAsBd;;;AACA,QAAME,YAAY,GAAIN,CAAD,IAAO;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,CAAC,CAACG,MAAF,CAASC,IAA7B;AACAT,IAAAA,MAAM,CAAEU,KAAD,IAAW;AAChB,aAAO,EAAE,GAAGA,KAAL;AAAYR,QAAAA,IAAI,EAAEG,CAAC,CAACG,MAAF,CAASC;AAA3B,OAAP;AACD,KAFK,CAAN;AAGD,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEV,GAAG,CAACE,GADb;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAC,WAJR;AAKE,QAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEP,SAAtB;AAAiC,QAAA,GAAG,EAAEE,GAAG,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,WAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEF,GAAG,CAACG,IADb;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,KAAK,EAAC,YAJR;AAKE,QAAA,QAAQ,EAAES;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEd,SAAtB;AAAiC,QAAA,GAAG,EAAEE,GAAG,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAyBE,QAAC,WAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,IAAI,EAAEL,SAApC;AAA+C,QAAA,GAAG,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA,kBADF;AAgCD;;GA9DQD,I;;MAAAA,I;AAgET,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport * as tagData from \"../lib/api/getData\";\r\nimport TrendContainer from \"../component/mainTrendContainer\";\r\nimport MainDayBtn from \"../component/mainDayBtn\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst CategoryBox = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nfunction Main() {\r\n  const [trendData, setTrendData] = useState(tagData.trendData);\r\n\r\n  const [day, setDay] = useState({\r\n    gap: \"day1_gap\",\r\n    rate: \"day1_rate\",\r\n  });\r\n\r\n  useEffect(async () => {\r\n    const getTrendData = await tagData.trendData;\r\n\r\n    setTrendData(getTrendData);\r\n  }, []);\r\n\r\n  // gap day버튼 클릭시\r\n  const onGapDayBtn = (e) => {\r\n    console.log(\"gap\", e.target.name);\r\n    setDay((state) => {\r\n      return { ...state, gap: e.target.name };\r\n    });\r\n  };\r\n\r\n  // rate day버튼 클릭시\r\n  const onRateDayBtn = (e) => {\r\n    console.log(\"rate\", e.target.name);\r\n    setDay((state) => {\r\n      return { ...state, rate: e.target.name };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CategoryBox>\r\n        <h2>포스팅 증가량 순위</h2>\r\n        <MainDayBtn\r\n          isDay={day.gap}\r\n          day1=\"day1_gap\"\r\n          day7=\"day7_gap\"\r\n          day30=\"day30_gap\"\r\n          onDayBtn={onGapDayBtn}\r\n        />\r\n        <TrendContainer data={trendData} day={day.gap} />\r\n      </CategoryBox>\r\n\r\n      <CategoryBox>\r\n        <h2>포스팅 증가율 순위</h2>\r\n        <MainDayBtn\r\n          isDay={day.rate}\r\n          day1=\"day1_rate\"\r\n          day7=\"day7_rate\"\r\n          day30=\"day30_rate\"\r\n          onDayBtn={onRateDayBtn}\r\n        />\r\n        <TrendContainer data={trendData} day={day.rate} />\r\n      </CategoryBox>\r\n\r\n      <CategoryBox>\r\n        <h2>새롭게 분석 대상이 된 해시태그</h2>\r\n        <TrendContainer type=\"recent\" data={trendData} day=\"recent_list\" />\r\n      </CategoryBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}