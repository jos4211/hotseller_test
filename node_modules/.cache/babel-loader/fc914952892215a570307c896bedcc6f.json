{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\q1w2e\\\\Desktop\\\\hotseller-test\\\\hotseller\\\\src\\\\component\\\\mainTrendContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MainTrendItem from \"./mainTrendItem\";\nimport styled from \"styled-components\";\nconst ItemBox = styled.span`\n  align-items: center;\n`;\n_c = ItemBox;\n\nfunction TrendContainer({\n  type,\n  data,\n  day\n}) {\n  _s();\n\n  const [trendItem, setTrendItem] = useState(null);\n  useEffect(async () => {\n    if (day === \"recent_list\") {\n      setTrendItem(data.recent_list.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(MainTrendItem, {\n          date: value.add_date,\n          hashtag: value.hashtag,\n          postCnt: value.post_cnt,\n          checkStartTime: value.check_start_time\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this);\n      }));\n    } else {\n      setTrendItem(data[day].map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(MainTrendItem, {\n          hashtag: value.hashtag,\n          postGap: value.post_gap,\n          postRate: value.post_rate,\n          postCnt: value.post_cnt\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      }));\n    }\n\n    console.log(\"data!!!\", trendItem);\n  }, [day]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ItemBox, {\n      children: trendItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TrendContainer, \"DSieTpzYRsH8PcW2yCgLipSHnRc=\");\n\n_c2 = TrendContainer;\nexport default TrendContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ItemBox\");\n$RefreshReg$(_c2, \"TrendContainer\");","map":{"version":3,"sources":["C:/Users/q1w2e/Desktop/hotseller-test/hotseller/src/component/mainTrendContainer.js"],"names":["React","useState","useEffect","MainTrendItem","styled","ItemBox","span","TrendContainer","type","data","day","trendItem","setTrendItem","recent_list","map","value","index","add_date","hashtag","post_cnt","check_start_time","post_gap","post_rate","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,IAAK;AAC5B;AACA,CAFA;KAAMD,O;;AAIN,SAASE,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAxB,EAA6C;AAAA;;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIQ,GAAG,KAAK,aAAZ,EAA2B;AACzBE,MAAAA,YAAY,CACVH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrC,4BACE,QAAC,aAAD;AAEE,UAAA,IAAI,EAAED,KAAK,CAACE,QAFd;AAGE,UAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,UAAA,OAAO,EAAEH,KAAK,CAACI,QAJjB;AAKE,UAAA,cAAc,EAAEJ,KAAK,CAACK;AALxB,WACOJ,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD,CADU,CAAZ;AAaD,KAdD,MAcO;AACLJ,MAAAA,YAAY,CACVH,IAAI,CAACC,GAAD,CAAJ,CAAUI,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC9B,4BACE,QAAC,aAAD;AAEE,UAAA,OAAO,EAAED,KAAK,CAACG,OAFjB;AAGE,UAAA,OAAO,EAAEH,KAAK,CAACM,QAHjB;AAIE,UAAA,QAAQ,EAAEN,KAAK,CAACO,SAJlB;AAKE,UAAA,OAAO,EAAEP,KAAK,CAACI;AALjB,WACOH,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD,CADU,CAAZ;AAaD;;AAEDO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,SAAvB;AACD,GAhCQ,EAgCN,CAACD,GAAD,CAhCM,CAAT;AAiCA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAA,gBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;GAzCQJ,c;;MAAAA,c;AA2CT,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MainTrendItem from \"./mainTrendItem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ItemBox = styled.span`\r\n  align-items: center;\r\n`;\r\n\r\nfunction TrendContainer({ type, data, day }) {\r\n  const [trendItem, setTrendItem] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    if (day === \"recent_list\") {\r\n      setTrendItem(\r\n        data.recent_list.map((value, index) => {\r\n          return (\r\n            <MainTrendItem\r\n              key={index}\r\n              date={value.add_date}\r\n              hashtag={value.hashtag}\r\n              postCnt={value.post_cnt}\r\n              checkStartTime={value.check_start_time}\r\n            />\r\n          );\r\n        })\r\n      );\r\n    } else {\r\n      setTrendItem(\r\n        data[day].map((value, index) => {\r\n          return (\r\n            <MainTrendItem\r\n              key={index}\r\n              hashtag={value.hashtag}\r\n              postGap={value.post_gap}\r\n              postRate={value.post_rate}\r\n              postCnt={value.post_cnt}\r\n            />\r\n          );\r\n        })\r\n      );\r\n    }\r\n\r\n    console.log(\"data!!!\", trendItem);\r\n  }, [day]);\r\n  return (\r\n    <>\r\n      <ItemBox>{trendItem}</ItemBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TrendContainer;\r\n"]},"metadata":{},"sourceType":"module"}